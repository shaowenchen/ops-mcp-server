apiVersion: apps/v1
kind: Deployment
metadata:
  name: ops-mcp-server
  namespace: ops-system
  labels:
    app: ops-mcp-server
    version: v1.0.0
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: ops-mcp-server
  template:
    metadata:
      labels:
        app: ops-mcp-server
        version: v1.0.0
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: ops-mcp-server
          image: registry.cn-beijing.aliyuncs.com/opshub/shaowenchen-ops-mcp-server:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          args:
            - "--config=./configs/config.yaml"
            - "--mode=sse"
            - "--enable-sops"
            - "--enable-events"
            - "--enable-metrics"
            - "--enable-logs"
            - "--enable-traces"
          env:
            # Server configuration
            - name: SERVER_MODE
              value: "sse"
            - name: SERVER_HOST
              value: "0.0.0.0"
            - name: SERVER_PORT
              value: "80"
            - name: LOG_LEVEL
              value: "info"
            # Module enablement
            - name: SOPS_ENABLED
              value: "false"
            - name: EVENTS_ENABLED
              value: "false"
            - name: METRICS_ENABLED
              value: "false"
            - name: LOGS_ENABLED
              value: "false"
            - name: TRACES_ENABLED
              value: "false"
            # SOPS module configuration
            - name: SOPS_OPS_ENDPOINT
              value: "https://ops-server.your-company.com"
            - name: SOPS_OPS_TOKEN
              value: ""
            # Events module configuration
            - name: EVENTS_OPS_ENDPOINT
              value: "https://ops-server.your-company.com"
            - name: EVENTS_OPS_TOKEN
              value: ""
            # Metrics module configuration
            - name: METRICS_PROMETHEUS_ENDPOINT
              value: "https://prometheus.your-company.com"
            # Logs module configuration
            - name: LOGS_ELASTICSEARCH_ENDPOINT
              value: "https://elasticsearch.your-company.com"
            - name: LOGS_ELASTICSEARCH_USERNAME
              value: ""
            - name: LOGS_ELASTICSEARCH_PASSWORD
              value: ""
            # Traces module configuration
            - name: TRACES_JAEGER_ENDPOINT
              value: "https://jaeger.your-company.com"
            - name: TRACES_JAEGER_TIMEOUT
              value: "30"
          resources:
            limits:
              cpu: 1
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          livenessProbe:
            httpGet:
              path: /mcp/healthz
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /mcp/healthz
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
      terminationGracePeriodSeconds: 30
